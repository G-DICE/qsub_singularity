#!/bin/bash -l
#
#$ -j y
#$ -cwd
#$ -N run_rstudio
#$ -l mem_requested=20G,tmp_requested=200G,tmpfree=200G
#$ -V
#

# PLEASE REVIEW AND ADJUST THE QSUB FLAGS ABOVE FIRST

# SGE DEBUG METADATA
cat /tmp/prolog_exec_"$JOB_ID"_"$SGE_TASK_ID".log

echo "JOB: $JOB_ID TASK: $SGE_TASK_ID"
echo "$HOSTNAME $tmp_requested $TMPDIR"

#######################################
# General user to customise
#######################################

IMAGE_URL="docker://rocker/rstudio:3.6.3"

# A scratch dir for building image, it can be temp scratch on the compute node
# or set it to a cluster share storage path (such as /share/ScratchGeneral if 
# want to keep the image file.
IMAGE_TMP="$TMPDIR"

# Here is to specify the local location is used to mount to /home/$USER inside 
# the container for storing R scripts etc
USER_DIR="$HOME/rstudio_user_dir/$JOB_ID"
mkdir -p $USER_DIR

# Provide a local path of your data, this location will be mounted to /data
# and expose your data inside the container.
DATA_DIR="/share/ScratchGeneral/$USER"

# A local path that will be mounted to /scratch inside the container. Here
# it is set to use the SGE TMPDIR location  which is dedicated for each job.
SCRATCH_DIR="$TMPDIR"

# A password set to authenticate in Rstudio
RSTUDIO_PASSWORD=password

################################
# DO NOT MODIFY (Adv User ONLY)
################################

# Get the hostname of the compute node on where jupyter is running
# We'll set up an SSH tunnel to connect to the Juypter notebook server
exec_host=$(hostname)
 
# Set the port for the SSH tunnel
# This part of the script uses a loop to search for available ports on the node;
# this will allow multiple instances of GUI servers to be run from the same host node
port="8888"
pfound="0"
while [ $port -lt 65535 ] ; do
  check=$( netstat -tuna | awk '{print $4}' | grep ":$port *" )
  if [ "$check" == "" ] ; then
    pfound="1"
    break
  fi
  : $((++port))
done
if [ $pfound -eq 0 ] ; then
  echo "No available communication port found to establish the SSH tunnel."
  echo "Try again later. Exiting."
  exit
fi
 
cd ${IMAGE_TMP}

# Pull the image in a folder
imagename=${IMAGE_URL##*/}
imagename=${imagename/:/_}.sif
singularity pull $imagename $IMAGE_URL

echo "*****************************************************"
echo "Setup SSH Tunnel - ON YOUR OWN COMPUTER macOS or Linux:"
echo ""
echo "ssh -N -f -L PICK_A_LOCAL_PORT:${exec_host}:${port} $USER@$SGE_O_HOST.garvan.unsw.edu.au"
echo ""
echo "*****************************************************"
echo ""
echo "*****************************************************"
echo "Terminate SSH Tunnel - ON YOUR OWN COMPUTER do:"
echo ""
echo "kill \$( ps x | grep 'ssh.*-L *PICK_A_LOCAL_PORT:${exec_host}:${port}' | awk '{print \$1}' )"
echo ""
echo "*****************************************************"
echo ""

export SINGULARITYENV_USER=${USER}
export SINGULARITYENV_PASSWORD=${RSTUDIO_PASSWORD}
 
# Launch our container and bind the local paths to
# the container internal location
singularity exec -C \
  -B ${USER_DIR}:/home/${USER} \
  -B ${DATA_DIR}:/data \
  -B ${SCRATCH_DIR}:/scratch \
  ${imagename} \
  rserver --www-port ${port} \
  --www-address 0.0.0.0 \
  --auth-pam-helper-path=pam-helper \
  --auth-none=0

